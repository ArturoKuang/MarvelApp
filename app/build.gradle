plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp' version '1.8.22-1.0.11'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'io.realm.kotlin'
    id "app.cash.sqldelight" version "2.0.0"
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

def marvelPublicKey = apikeyProperties.getProperty("MARVEL_PUBLIC_API_KEY", "")
def marvelPrivateKey = apikeyProperties.getProperty("MARVEL_PRIVATE_API_KEY", "")

android {
    namespace 'com.example.myapplication'
    compileSdk 34

    buildFeatures {
        viewBinding true
        compose true
    }

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "MARVEL_PUBLIC_KEY", "\"$marvelPublicKey\"")
        buildConfigField("String", "MARVEL_PRIVATE_KEY", "\"$marvelPrivateKey\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.6"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

sqldelight {
    databases {
        create("Database") {
            packageName.set("com.example")
        }
    }
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
    // Replace with the latest version
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation "io.coil-kt:coil:2.3.0"
    // Coil
    implementation("io.coil-kt:coil-compose:2.3.0")

    // Hilt
    implementation "com.google.dagger:hilt-android:2.46"
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
    kapt("com.google.dagger:hilt-android-compiler:2.44.2")
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Optional - ViewModel support
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Retrofit core library
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Gson converter library
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0'

    // Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // Json converter
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0"
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'app.cash.turbine:turbine:1.0.0'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.46'
    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.46'
    kaptTest "com.google.dagger:hilt-android-compiler:2.44.2"
    testImplementation "io.mockk:mockk:1.13.5"


    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Jetpack Compose dependencies
    implementation 'androidx.compose.ui:ui:1.5.2'
    implementation 'androidx.compose.material:material:1.5.2'
    implementation 'androidx.compose.ui:ui-tooling:1.5.2'
    implementation 'androidx.compose.runtime:runtime-livedata:1.5.2'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0-alpha02'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0-alpha02"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.7.0-alpha02"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    // Kotlin compiler plugin for Jetpack Compose
    kapt 'androidx.compose.compiler:compiler:1.5.3'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Paging
    def paging_version = "3.1.1"

    //noinspection GradleDependency
    implementation("androidx.paging:paging-runtime-ktx:$paging_version")

    // alternatively - without Android dependencies for tests
    //noinspection GradleDependency
    testImplementation("androidx.paging:paging-common-ktx:$paging_version")

    // optional - Jetpack Compose integration
    implementation("androidx.paging:paging-compose:3.2.0")

    def room_version = "2.5.2"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    implementation project(':mvi')
    implementation "com.squareup.okhttp3:okhttp-sse:4.9.3"
    testImplementation "com.squareup.okhttp3:okhttp-sse:4.9.3"

    //realm
    implementation 'io.realm.kotlin:library-base:1.11.0'
    implementation 'io.realm.kotlin:library-sync:1.11.0'// If using Device Sync
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3' // If using coroutines with the SDK

    //sqldelight
    implementation("app.cash.sqldelight:coroutines-extensions:2.0.0")
    implementation("app.cash.sqldelight:android-driver:2.0.0")

}

kapt {
    correctErrorTypes = true
}